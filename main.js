!function(){"use strict";var t={};function e(t,e,...i){const n=document.createElement(e);return i.forEach((t=>{n.classList.add(t)})),t.appendChild(n),n}function i(t){document.querySelector(`.modal-${t}`).classList.add("modal-flex")}function n(t){document.querySelector(`.modal-${t}`).classList.remove("modal-flex")}function s(t){const e=document.querySelector(".modal-edit");e.querySelector(".input-name").value=t.name,e.querySelector(".input-description").value=t.description}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),function(){var e;t.g.importScripts&&(e=t.g.location+"");var i=t.g.document;if(!e&&i&&(i.currentScript&&(e=i.currentScript.src),!e)){var n=i.getElementsByTagName("script");if(n.length)for(var s=n.length-1;s>-1&&!e;)e=n[s--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e}();var c=t.p+"832b45baedc0f752e451.png",r=t.p+"5b1ab42f0b214991664c.png",o=t.p+"6367da8821367a20344a.png";class a{constructor(t){this.container=t}ticketDraw(t){let i;const n=e(this.container,"div","ticket");n.id=t.id;const s=e(n,"div","ticket-short"),a=e(s,"div","circle","done-btn"),d=e(a,"img","img-btn");t.status||d.classList.add("invisible"),d.src=r,e(s,"div","ticket-name").textContent=t.name;const l=e(s,"div","ticket-date");i=new Date(t.created),l.textContent=i.toLocaleString("ru",{year:"2-digit",month:"2-digit",day:"2-digit"})+" "+i.toLocaleString("ru",{hour:"2-digit",minute:"2-digit"});const h=e(s,"div","circle","edit-btn");e(h,"img","img-btn").src=c;const m=e(s,"div","circle","delete-btn");e(m,"img","img-btn").src=o}ticketDelete(t){document.getElementById(t).remove()}ticketUpdate(t){for(;this.container.firstChild;)this.container.firstChild.remove();t.forEach((t=>{this.ticketDraw(t)}))}ticketDescription(t){e(document.getElementById(t.id),"div","ticket-description").textContent=t.description}}class d{constructor(t){this.container=t}render(t){const i=e(this.container,"div","modal",`modal-${t}`),s=e(i,"form","modal-form"),c=e(s,"div","form-header");switch(t){case"add":c.textContent="Добавить тикет";break;case"edit":c.textContent="Изменить тикет";break;case"delete":c.textContent="Удалить тикет"}if("add"===t||"edit"===t){const t=e(s,"label","form-text");t.textContent="Краткое описание",e(t,"input","input","input-name").name="name";const i=e(s,"label","form-text");i.textContent="Подробное описание",e(i,"textarea","input","input-description").name="description"}else"delete"===t&&(e(s,"div","form-text").textContent="Вы уверены, что хотите удалить тикет?  Это действие необратимо.");const r=e(s,"div","buttons-section"),o=e(r,"button","cancel-button","btn");o.type="reset",o.textContent="Отмена",o.addEventListener("click",(e=>{e.preventDefault(),n(t)}));const a=e(r,"button","ok-button","btn");return a.type="submit",a.textContent="OK",i}}var l=async(t,e)=>{const i=fetch(t,e),n=await i;if(n.ok)return 204===n.status?n.status:await n.json();console.error("Ошибка")};const h=document.getElementById("root"),m=new class{constructor(t){this.baseURL=t}list(t){const e=new URLSearchParams({method:"allTickets"}),i=`${this.baseURL}?${e.toString()}`,n={method:"GET",headers:{"Content-Type":"application/json"}};(async()=>{(await l(i,n)).forEach((e=>{t(e)}))})()}get(t,e){if(!t)return;const i=new URLSearchParams({method:"ticketById",id:t}),n=`${this.baseURL}?${i.toString()}`,s={method:"GET",headers:{"Content-Type":"application/json"}};(async()=>{const t=await l(n,s);e(t)})()}create(t,e){if(!t.name)return;const i=new URLSearchParams({method:"createTicket"}),n=`${this.baseURL}?${i.toString()}`,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};(async()=>{const t=await l(n,s);e(t)})()}update(t,e,i){if(!t)return;const n=new URLSearchParams({method:"updateById",id:t}),s=`${this.baseURL}?${n.toString()}`,c={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)};(async()=>{const t=await l(s,c);i(t)})()}delete(t,e){if(!t)return;const i=new URLSearchParams({method:"deleteById",id:t}),n=`${this.baseURL}?${i.toString()}`,s={method:"DELETE",headers:{"Content-Type":"application/json"}};(async()=>{204===await l(n,s)&&e(t)})()}}("http://localhost:7070");new class{constructor(t,e){if(!(t instanceof HTMLElement))throw new Error("This is not HTML element!");this.container=t,this.ticketService=e,this.addTicket=this.addTicket.bind(this),this.editTicket=this.editTicket.bind(this),this.deleteTicket=this.deleteTicket.bind(this),this.showDescription=this.showDescription.bind(this),this.targetTicket=null}init(){const t=this.drawUI();this.ticketView=new a(t);const e=this.ticketView.ticketDraw.bind(this.ticketView);this.ticketService.list(e),t.addEventListener("click",(t=>{t.preventDefault();const e=t.target.closest(".circle");if(this.targetTicket=t.target.closest(".ticket"),e){if(e.classList.contains("edit-btn"))return i("edit"),void this.ticketService.get(this.targetTicket.id,s);if(e.classList.contains("delete-btn"))i("delete");else if(e.classList.contains("done-btn")){const t=e.querySelector(".img-btn");let i;t.classList.contains("invisible")?(t.classList.remove("invisible"),i={status:!0}):(t.classList.add("invisible"),i={status:!1});const n=this.ticketView.ticketUpdate.bind(this.ticketView);this.ticketService.update(this.targetTicket.id,i,n)}}else this.showDescription(this.targetTicket)}))}drawUI(){const t=e(this.container,"div","desk"),n=e(t,"div","desk-header");e(n,"div","desk-header-menu-btn");const s=e(t,"div","desk-content"),c=e(s,"button","btn","add-btn");return c.textContent="Добавить тикет",c.addEventListener("click",(()=>{i("add")})),new d(s).render("add").querySelector(".modal-form").addEventListener("submit",this.addTicket),new d(s).render("edit").querySelector(".modal-form").addEventListener("submit",this.editTicket),new d(s).render("delete").querySelector(".modal-form").addEventListener("submit",this.deleteTicket),e(s,"div","ticket-list")}showDescription(t){let e;if(t.classList.contains("withDescription"))e=t.querySelector(".ticket-description"),t.classList.remove("withDescription"),t.removeChild(e);else{const e=this.ticketView.ticketDescription.bind(this.ticketView);this.ticketService.get(t.id,e),t.classList.add("withDescription")}}addTicket(t){t.preventDefault();const e={};Array.from(t.target.elements).filter((t=>!!t.name)).forEach((t=>{const{name:i,value:n}=t;e[i]=n}));const i=this.ticketView.ticketDraw.bind(this.ticketView);this.ticketService.create(e,i),n("add")}editTicket(t){t.preventDefault();const e=this.targetTicket.id;let i={};Array.from(t.target.elements).filter((t=>!!t.name)).forEach((t=>{const{name:e,value:n}=t;i[e]=n}));const s=this.ticketView.ticketUpdate.bind(this.ticketView);this.ticketService.update(e,i,s),n("edit")}deleteTicket(t){t.preventDefault();const e=this.targetTicket.id,i=this.ticketView.ticketDelete.bind(this.ticketView);this.ticketService.delete(e,i),n("delete")}}(h,m).init()}();
//# sourceMappingURL=main.js.map