{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Helpdesk-frontend/webpack/bootstrap","webpack://Helpdesk-frontend/webpack/runtime/global","webpack://Helpdesk-frontend/webpack/runtime/publicPath","webpack://Helpdesk-frontend/./src/js/api/createRequest.js","webpack://Helpdesk-frontend/./src/js/TicketService.js","webpack://Helpdesk-frontend/./src/js/utils.js","webpack://Helpdesk-frontend/./src/js/TicketView.js","webpack://Helpdesk-frontend/./src/js/TicketForm.js","webpack://Helpdesk-frontend/./src/js/app.js","webpack://Helpdesk-frontend/./src/js/HelpDesk.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const createRequest = async (url, options) => {\n    const request = fetch(url, options);\n        \n    const result = await request;\n    \n    if (!result.ok) {\n    console.error('Ошибка');\n    \n    return;\n    }\n\n    if (result.status === 204) {\n        return result.status;\n    }\n\n    const data = await result.json();\n    return data;\n};\n\nexport default createRequest;\n","/**\n *  Класс для связи с сервером.\n *  Содержит методы для отправки запросов на сервер и получения ответов\n * */\n\nimport createRequest from './api/createRequest';\n\nexport default class TicketService {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  list(callback) {\n    const params = new URLSearchParams({\n      'method': 'allTickets',\n    });\n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n\n      result.forEach(item => {\n        callback(item);\n      })\n    })();\n  }\n\n  get(id, callback) {\n    if (!id) {\n      return;\n    }\n\n    const params = new URLSearchParams({\n      'method': 'ticketById',\n      'id': id,\n    });\n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n      callback(result);\n    })();  \n  }\n\n  create(data, callback) {\n    if (!data.name) {\n      return;\n    }\n\n    const params = new URLSearchParams({\n      'method': 'createTicket',\n    });\n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n      callback(result);\n    })();\n\n  }\n\n  update(id, data, callback) {\n    if (!id) {\n      return;\n    }\n\n    const params = new URLSearchParams({\n      'method': 'updateById',\n      'id': id,\n    });  \n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n      callback(result);\n    })();\n  }\n\n  delete(id, callback) {\n    if (!id) {\n      return;\n    }\n\n    const params = new URLSearchParams({\n      'method': 'deleteById',\n      'id': id,\n    });    \n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n      \n      if (result === 204) {\n        callback(id);        \n      }\n    })();\n  }\n}\n","export function renderElem(parent, type, ...className) {\n  const elem = document.createElement(type);\n  className.forEach(item => {\n    elem.classList.add(item);\n  });\n    \n  parent.appendChild(elem);\n  return elem;\n}\n\nexport function showForm(type) {\n  const modalForm = document.querySelector(`.modal-${type}`);\n  modalForm.classList.add('modal-flex');  \n}\n\nexport function hideForm(type) {\n  const modalForm = document.querySelector(`.modal-${type}`);\n  modalForm.classList.remove('modal-flex');  \n}\n\nexport function showTicketData(ticket) {\n  const editForm = document.querySelector(`.modal-edit`);\n  const inputName = editForm.querySelector(`.input-name`);\n  inputName.value = ticket.name;\n  const inputDescription = editForm.querySelector(`.input-description`);\n  inputDescription.value = ticket.description;\n}","/**\n *  Класс для отображения тикетов на странице.\n *  Он содержит методы для генерации разметки тикета.\n * */\n\nimport {renderElem} from './utils';\n\nimport edit from '../img/edit.png'; \nimport done from '../img/done.png'; \nimport del from '../img/delete.png'; \n\nexport default class TicketView {\n  constructor(container) {\n    this.container = container;\n  }\n\n  ticketDraw(ticket) {\n    let date;\n    const dateOptions = {\n      year: '2-digit',\n      month: '2-digit',\n      day: '2-digit'\n    }\n    const timeOptions = {\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n\n    const ticketElem = renderElem(this.container, 'div', 'ticket');\n    ticketElem.id = ticket.id;\n\n    const ticketShort = renderElem(ticketElem, 'div', 'ticket-short');\n    \n    const doneBtn = renderElem(ticketShort, 'div', 'circle', 'done-btn');\n    const doneBtnImg = renderElem(doneBtn, 'img', 'img-btn');\n    if (!ticket.status) {\n      doneBtnImg.classList.add('invisible');\n    }\n    doneBtnImg.src = done;\n\n    const ticketName = renderElem(ticketShort, 'div', 'ticket-name');\n    ticketName.textContent = ticket.name;\n\n    const ticketDate = renderElem(ticketShort, 'div', 'ticket-date');\n    date = new Date(ticket.created);\n    ticketDate.textContent = date.toLocaleString(\"ru\", dateOptions) + \" \" + date.toLocaleString(\"ru\", timeOptions);\n\n    const editBtn = renderElem(ticketShort, 'div', 'circle', 'edit-btn');\n    const editBtnImg = renderElem(editBtn, 'img', 'img-btn');\n    editBtnImg.src = edit;\n\n    const deleteBtn = renderElem(ticketShort, 'div', 'circle', 'delete-btn');\n    const deleteBtnImg = renderElem(deleteBtn, 'img', 'img-btn');\n    deleteBtnImg.src = del;\n  }\n\n  ticketDelete(id) {\n    const ticketForDelete = document.getElementById(id);\n    ticketForDelete.remove();    \n  }\n\n  ticketUpdate(data) {\n    while (this.container.firstChild) {\n      this.container.firstChild.remove();\n    }\n\n    data.forEach(item => {\n      this.ticketDraw(item);\n    })    \n  }\n\n  ticketDescription(ticket) {\n    const currentTicket = document.getElementById(ticket.id);\n    const description = renderElem(currentTicket, 'div', 'ticket-description');\n    description.textContent = ticket.description;      \n  }\n}\n","/**\n *  Класс для создания формы создания нового тикета\n * */\n\nimport { renderElem, hideForm} from './utils';\n\nexport default class TicketForm {\n  constructor(container) {\n    this.container = container;\n  }\n\n  render(type) {\n    const modal = renderElem(this.container, 'div', 'modal', `modal-${type}`);\n    const form = renderElem(modal, 'form', 'modal-form');\n    const formHeader = renderElem(form, 'div', 'form-header');\n    switch (type) {\n      case 'add':\n        formHeader.textContent = 'Добавить тикет';\n        break;\n      case 'edit':\n        formHeader.textContent = 'Изменить тикет';\n        break;\n      case 'delete':\n        formHeader.textContent = 'Удалить тикет';\n        break;\n    }\n\n    if (type === 'add' || type === 'edit') {\n      const lableName = renderElem(form, 'label', 'form-text');\n      lableName.textContent = 'Краткое описание';\n      const inputName = renderElem(lableName, 'input', 'input', 'input-name');\n      inputName.name = 'name';\n\n      const lableDescription = renderElem(form, 'label', 'form-text');\n      lableDescription.textContent = 'Подробное описание';\n      const inputDescription = renderElem(lableDescription, 'textarea', 'input', 'input-description');\n      inputDescription.name = 'description';\n\n    } else if (type === 'delete') {\n      const confirmation = renderElem(form, 'div', 'form-text');\n      confirmation.textContent = 'Вы уверены, что хотите удалить тикет?  Это действие необратимо.';\n    } \n\n    const buttonsSection = renderElem(form, 'div', 'buttons-section');\n        \n    const cancelButton = renderElem(buttonsSection, 'button', 'cancel-button', 'btn');\n    cancelButton.type = 'reset';\n    cancelButton.textContent = 'Отмена';\n    cancelButton.addEventListener('click', (event) => {\n      event.preventDefault();\n      hideForm(type);\n    })\n\n    const okButton = renderElem(buttonsSection, 'button', 'ok-button', 'btn');\n    okButton.type = 'submit';\n    okButton.textContent = 'OK';\n    \n    return modal;\n  }\n\n\n}\n","import HelpDesk from './HelpDesk';\n\nconst root = document.getElementById('root');\n\nconst app = new HelpDesk(root);\n\napp.init();\n","import TicketService from \"./TicketService\";\nimport { renderElem, showForm, hideForm, showTicketData } from './utils';\nimport TicketView from './TicketView';\nimport TicketForm from './TicketForm';\n\n/**\n *  Основной класс приложения\n * */\nexport default class HelpDesk {\n  constructor(container) {\n    if (!(container instanceof HTMLElement)) {\n      throw new Error(\"This is not HTML element!\");\n    }\n\n    this.container = container;\n\n    this.ticketService = new TicketService('http://localhost:7070');\n\n    this.addTicket = this.addTicket.bind(this);\n    this.editTicket = this.editTicket.bind(this);\n    this.deleteTicket = this.deleteTicket.bind(this);\n    this.showDescription = this.showDescription.bind(this);\n\n    this.targetTicket = null;\n  }\n\n  init() {\n    const ticketList = this.drawUI();\n    this.ticketView = new TicketView(ticketList);\n\n    const ticketDrawFunc = this.ticketView.ticketDraw.bind(this.ticketView);\n    this.ticketService.list(ticketDrawFunc);\n    \n    ticketList.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      const circleTarget = event.target.closest('.circle');\n      this.targetTicket = event.target.closest('.ticket');\n\n      if (!circleTarget) {\n        this.showDescription(this.targetTicket);\n        return;\n      }\n\n      if (circleTarget.classList.contains('edit-btn')) {\n        showForm('edit');\n        this.ticketService.get(this.targetTicket.id, showTicketData);\n        return;\n      } else if (circleTarget.classList.contains('delete-btn')) {\n        showForm('delete');\n        return;\n      } else if (circleTarget.classList.contains('done-btn')) {\n        const imgBtn = circleTarget.querySelector('.img-btn');\n        let status;\n        if (imgBtn.classList.contains('invisible')) {\n          imgBtn.classList.remove('invisible');\n          status = {status: true};\n        } else {\n          imgBtn.classList.add('invisible');\n          status = {status: false};\n        }\n        const ticketUpdateFunc = this.ticketView.ticketUpdate.bind(this.ticketView);\n        this.ticketService.update(this.targetTicket.id, status, ticketUpdateFunc);\n        return;\n      } else {\n        return;\n      }\n    });\n  }\n\n  drawUI() {\n    const desk = renderElem(this.container, 'div', 'desk');\n    const deskHeader = renderElem(desk, 'div', 'desk-header');\n    renderElem(deskHeader, 'div', 'desk-header-menu-btn');    \n    const deskContent = renderElem(desk, 'div', 'desk-content');\n\n    const addBtn = renderElem(deskContent, 'button', 'btn', 'add-btn');\n    addBtn.textContent = 'Добавить тикет';\n    addBtn.addEventListener('click', () => {\n      showForm('add');\n    });\n\n    const addForm = new TicketForm(deskContent);\n    const addFormModal = addForm.render('add').querySelector('.modal-form');\n    addFormModal.addEventListener('submit', this.addTicket);\n\n    const editForm = new TicketForm(deskContent);\n    const editFormModal = editForm.render('edit').querySelector('.modal-form');\n    editFormModal.addEventListener('submit', this.editTicket);\n\n    const deleteForm = new TicketForm(deskContent);\n    const deleteFormModal = deleteForm.render('delete').querySelector('.modal-form');\n    deleteFormModal.addEventListener('submit', this.deleteTicket);\n\n    return renderElem(deskContent, 'div', 'ticket-list');\n  }\n\n  showDescription(elem) {\n    let description;\n    if (elem.classList.contains('withDescription')) {\n      description = elem.querySelector('.ticket-description');\n      elem.classList.remove('withDescription');\n      elem.removeChild(description);\n    } else {      \n      const ticketDescriptionFunc = this.ticketView.ticketDescription.bind(this.ticketView);\n      this.ticketService.get(elem.id, ticketDescriptionFunc);\n      elem.classList.add('withDescription');\n    }\n  }\n\n  addTicket(e) {\n    e.preventDefault();\n    let addData = {};\n\n    Array.from(e.target.elements)\n    .filter((item) => !!item.name)\n    .forEach((element) => {\n      const { name, value } = element;\n      addData[name] = value;\n    });\n\n    const ticketDrawFunc = this.ticketView.ticketDraw.bind(this.ticketView);\n    this.ticketService.create(addData, ticketDrawFunc);\n    hideForm('add');\n  }\n\n  editTicket(e) {\n    e.preventDefault();\n    const id = this.targetTicket.id;\n    let data = {};\n\n    Array.from(e.target.elements)\n    .filter((item) => !!item.name)\n    .forEach((element) => {\n      const { name, value } = element;\n      data[name] = value;\n    });\n\n    const ticketUpdateFunc = this.ticketView.ticketUpdate.bind(this.ticketView);\n    this.ticketService.update(id, data, ticketUpdateFunc);\n    hideForm('edit');\n  }\n\n  deleteTicket(e) {\n    e.preventDefault();\n    const id = this.targetTicket.id;\n    const ticketDeleteFunc = this.ticketView.ticketDelete.bind(this.ticketView);\n    this.ticketService.delete(id, ticketDeleteFunc);\n    hideForm('delete');\n  }\n\n}\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","async","url","options","request","fetch","result","ok","status","json","console","error","TicketService","constructor","baseURL","list","callback","params","URLSearchParams","encodedURL","toString","requestOptions","method","headers","createRequest","forEach","item","get","id","create","data","name","body","JSON","stringify","update","delete","renderElem","parent","type","className","elem","createElement","classList","add","appendChild","showForm","querySelector","hideForm","remove","showTicketData","ticket","editForm","value","description","TicketView","container","ticketDraw","date","ticketElem","ticketShort","doneBtn","doneBtnImg","done","textContent","ticketDate","Date","created","toLocaleString","year","month","day","hour","minute","editBtn","edit","deleteBtn","del","ticketDelete","getElementById","ticketUpdate","firstChild","ticketDescription","TicketForm","render","modal","form","formHeader","lableName","lableDescription","buttonsSection","cancelButton","addEventListener","event","preventDefault","okButton","root","HTMLElement","ticketService","addTicket","bind","editTicket","deleteTicket","showDescription","targetTicket","init","ticketList","drawUI","ticketView","ticketDrawFunc","circleTarget","target","closest","contains","imgBtn","ticketUpdateFunc","desk","deskHeader","deskContent","addBtn","removeChild","ticketDescriptionFunc","addData","Array","from","elements","filter","element","ticketDeleteFunc"],"sourceRoot":""}