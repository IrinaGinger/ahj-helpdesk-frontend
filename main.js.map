{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Helpdesk-frontend/webpack/bootstrap","webpack://Helpdesk-frontend/./src/js/utils.js","webpack://Helpdesk-frontend/webpack/runtime/global","webpack://Helpdesk-frontend/webpack/runtime/publicPath","webpack://Helpdesk-frontend/./src/js/TicketView.js","webpack://Helpdesk-frontend/./src/js/TicketForm.js","webpack://Helpdesk-frontend/./src/js/api/createRequest.js","webpack://Helpdesk-frontend/./src/js/app.js","webpack://Helpdesk-frontend/./src/js/TicketService.js","webpack://Helpdesk-frontend/./src/js/HelpDesk.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export function renderElem(parent, type, ...className) {\n  const elem = document.createElement(type);\n  className.forEach(item => {\n    elem.classList.add(item);\n  });\n    \n  parent.appendChild(elem);\n  return elem;\n}\n\nexport function showForm(type) {\n  const modalForm = document.querySelector(`.modal-${type}`);\n  modalForm.classList.add('modal-flex');  \n}\n\nexport function hideForm(type) {\n  const modalForm = document.querySelector(`.modal-${type}`);\n  modalForm.classList.remove('modal-flex');  \n}\n\nexport function showTicketData(ticket) {\n  const editForm = document.querySelector(`.modal-edit`);\n  const inputName = editForm.querySelector(`.input-name`);\n  inputName.value = ticket.name;\n  const inputDescription = editForm.querySelector(`.input-description`);\n  inputDescription.value = ticket.description;\n}","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","/**\n *  Класс для отображения тикетов на странице.\n *  Он содержит методы для генерации разметки тикета.\n * */\n\nimport {renderElem} from './utils';\n\nimport edit from '../img/edit.png'; \nimport done from '../img/done.png'; \nimport del from '../img/delete.png'; \n\nexport default class TicketView {\n  constructor(container) {\n    this.container = container;\n  }\n\n  ticketDraw(ticket) {\n    let date;\n    const dateOptions = {\n      year: '2-digit',\n      month: '2-digit',\n      day: '2-digit'\n    }\n    const timeOptions = {\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n\n    const ticketElem = renderElem(this.container, 'div', 'ticket');\n    ticketElem.id = ticket.id;\n\n    const ticketShort = renderElem(ticketElem, 'div', 'ticket-short');\n    \n    const doneBtn = renderElem(ticketShort, 'div', 'circle', 'done-btn');\n    const doneBtnImg = renderElem(doneBtn, 'img', 'img-btn');\n    if (!ticket.status) {\n      doneBtnImg.classList.add('invisible');\n    }\n    doneBtnImg.src = done;\n\n    const ticketName = renderElem(ticketShort, 'div', 'ticket-name');\n    ticketName.textContent = ticket.name;\n\n    const ticketDate = renderElem(ticketShort, 'div', 'ticket-date');\n    date = new Date(ticket.created);\n    ticketDate.textContent = date.toLocaleString(\"ru\", dateOptions) + \" \" + date.toLocaleString(\"ru\", timeOptions);\n\n    const editBtn = renderElem(ticketShort, 'div', 'circle', 'edit-btn');\n    const editBtnImg = renderElem(editBtn, 'img', 'img-btn');\n    editBtnImg.src = edit;\n\n    const deleteBtn = renderElem(ticketShort, 'div', 'circle', 'delete-btn');\n    const deleteBtnImg = renderElem(deleteBtn, 'img', 'img-btn');\n    deleteBtnImg.src = del;\n  }\n\n  ticketDelete(id) {\n    const ticketForDelete = document.getElementById(id);\n    ticketForDelete.remove();    \n  }\n\n  ticketUpdate(data) {\n    while (this.container.firstChild) {\n      this.container.firstChild.remove();\n    }\n\n    data.forEach(item => {\n      this.ticketDraw(item);\n    })    \n  }\n\n  ticketDescription(ticket) {\n    const currentTicket = document.getElementById(ticket.id);\n    const description = renderElem(currentTicket, 'div', 'ticket-description');\n    description.textContent = ticket.description;      \n  }\n}\n","/**\n *  Класс для создания формы создания нового тикета\n * */\n\nimport { renderElem, hideForm} from './utils';\n\nexport default class TicketForm {\n  constructor(container) {\n    this.container = container;\n  }\n\n  render(type) {\n    const modal = renderElem(this.container, 'div', 'modal', `modal-${type}`);\n    const form = renderElem(modal, 'form', 'modal-form');\n    const formHeader = renderElem(form, 'div', 'form-header');\n    switch (type) {\n      case 'add':\n        formHeader.textContent = 'Добавить тикет';\n        break;\n      case 'edit':\n        formHeader.textContent = 'Изменить тикет';\n        break;\n      case 'delete':\n        formHeader.textContent = 'Удалить тикет';\n        break;\n    }\n\n    if (type === 'add' || type === 'edit') {\n      const lableName = renderElem(form, 'label', 'form-text');\n      lableName.textContent = 'Краткое описание';\n      const inputName = renderElem(lableName, 'input', 'input', 'input-name');\n      inputName.name = 'name';\n\n      const lableDescription = renderElem(form, 'label', 'form-text');\n      lableDescription.textContent = 'Подробное описание';\n      const inputDescription = renderElem(lableDescription, 'textarea', 'input', 'input-description');\n      inputDescription.name = 'description';\n\n    } else if (type === 'delete') {\n      const confirmation = renderElem(form, 'div', 'form-text');\n      confirmation.textContent = 'Вы уверены, что хотите удалить тикет?  Это действие необратимо.';\n    } \n\n    const buttonsSection = renderElem(form, 'div', 'buttons-section');\n        \n    const cancelButton = renderElem(buttonsSection, 'button', 'cancel-button', 'btn');\n    cancelButton.type = 'reset';\n    cancelButton.textContent = 'Отмена';\n    cancelButton.addEventListener('click', (event) => {\n      event.preventDefault();\n      hideForm(type);\n    })\n\n    const okButton = renderElem(buttonsSection, 'button', 'ok-button', 'btn');\n    okButton.type = 'submit';\n    okButton.textContent = 'OK';\n    \n    return modal;\n  }\n\n\n}\n","const createRequest = async (url, options) => {\n    const request = fetch(url, options);\n        \n    const result = await request;\n    \n    if (!result.ok) {\n    console.error('Ошибка');\n    \n    return;\n    }\n\n    if (result.status === 204) {\n        return result.status;\n    }\n\n    const data = await result.json();\n    return data;\n};\n\nexport default createRequest;\n","import HelpDesk from './HelpDesk';\nimport TicketService from \"./TicketService\";\n\nconst root = document.getElementById('root');\n\nconst baseURL = 'http://localhost:7070';\nconst service = new TicketService(baseURL);\nconst app = new HelpDesk(root, service);\n\napp.init();\n","/**\n *  Класс для связи с сервером.\n *  Содержит методы для отправки запросов на сервер и получения ответов\n * */\n\nimport createRequest from './api/createRequest';\n\nexport default class TicketService {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  list(callback) {\n    const params = new URLSearchParams({\n      'method': 'allTickets',\n    });\n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n\n      result.forEach(item => {\n        callback(item);\n      })\n    })();\n  }\n\n  get(id, callback) {\n    if (!id) {\n      return;\n    }\n\n    const params = new URLSearchParams({\n      'method': 'ticketById',\n      'id': id,\n    });\n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n      callback(result);\n    })();  \n  }\n\n  create(data, callback) {\n    if (!data.name) {\n      return;\n    }\n\n    const params = new URLSearchParams({\n      'method': 'createTicket',\n    });\n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n      callback(result);\n    })();\n\n  }\n\n  update(id, data, callback) {\n    if (!id) {\n      return;\n    }\n\n    const params = new URLSearchParams({\n      'method': 'updateById',\n      'id': id,\n    });  \n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n      callback(result);\n    })();\n  }\n\n  delete(id, callback) {\n    if (!id) {\n      return;\n    }\n\n    const params = new URLSearchParams({\n      'method': 'deleteById',\n      'id': id,\n    });    \n\n    const encodedURL = `${this.baseURL}?${params.toString()}`;\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    };\n    \n    (async () => {\n      const result = await createRequest(encodedURL, requestOptions);\n      \n      if (result === 204) {\n        callback(id);        \n      }\n    })();\n  }\n}\n","import { renderElem, showForm, hideForm, showTicketData } from './utils';\nimport TicketView from './TicketView';\nimport TicketForm from './TicketForm';\n\n/**\n *  Основной класс приложения\n * */\nexport default class HelpDesk {\n  constructor(container, ticketService) {\n    if (!(container instanceof HTMLElement)) {\n      throw new Error(\"This is not HTML element!\");\n    }\n\n    this.container = container;\n\n    this.ticketService = ticketService;\n\n    this.addTicket = this.addTicket.bind(this);\n    this.editTicket = this.editTicket.bind(this);\n    this.deleteTicket = this.deleteTicket.bind(this);\n    this.showDescription = this.showDescription.bind(this);\n\n    this.targetTicket = null;\n  }\n\n  init() {\n    const ticketList = this.drawUI();\n    this.ticketView = new TicketView(ticketList);\n\n    const ticketDrawFunc = this.ticketView.ticketDraw.bind(this.ticketView);\n    this.ticketService.list(ticketDrawFunc);\n    \n    ticketList.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      const circleTarget = event.target.closest('.circle');\n      this.targetTicket = event.target.closest('.ticket');\n\n      if (!circleTarget) {\n        this.showDescription(this.targetTicket);\n        return;\n      }\n\n      if (circleTarget.classList.contains('edit-btn')) {\n        showForm('edit');\n        this.ticketService.get(this.targetTicket.id, showTicketData);\n        return;\n      } else if (circleTarget.classList.contains('delete-btn')) {\n        showForm('delete');\n        return;\n      } else if (circleTarget.classList.contains('done-btn')) {\n        const imgBtn = circleTarget.querySelector('.img-btn');\n        let status;\n        if (imgBtn.classList.contains('invisible')) {\n          imgBtn.classList.remove('invisible');\n          status = {status: true};\n        } else {\n          imgBtn.classList.add('invisible');\n          status = {status: false};\n        }\n        const ticketUpdateFunc = this.ticketView.ticketUpdate.bind(this.ticketView);\n        this.ticketService.update(this.targetTicket.id, status, ticketUpdateFunc);\n        return;\n      } else {\n        return;\n      }\n    });\n  }\n\n  drawUI() {\n    const desk = renderElem(this.container, 'div', 'desk');\n    const deskHeader = renderElem(desk, 'div', 'desk-header');\n    renderElem(deskHeader, 'div', 'desk-header-menu-btn');    \n    const deskContent = renderElem(desk, 'div', 'desk-content');\n\n    const addBtn = renderElem(deskContent, 'button', 'btn', 'add-btn');\n    addBtn.textContent = 'Добавить тикет';\n    addBtn.addEventListener('click', () => {\n      showForm('add');\n    });\n\n    const addForm = new TicketForm(deskContent);\n    const addFormModal = addForm.render('add').querySelector('.modal-form');\n    addFormModal.addEventListener('submit', this.addTicket);\n\n    const editForm = new TicketForm(deskContent);\n    const editFormModal = editForm.render('edit').querySelector('.modal-form');\n    editFormModal.addEventListener('submit', this.editTicket);\n\n    const deleteForm = new TicketForm(deskContent);\n    const deleteFormModal = deleteForm.render('delete').querySelector('.modal-form');\n    deleteFormModal.addEventListener('submit', this.deleteTicket);\n\n    return renderElem(deskContent, 'div', 'ticket-list');\n  }\n\n  showDescription(elem) {\n    let description;\n    if (elem.classList.contains('withDescription')) {\n      description = elem.querySelector('.ticket-description');\n      elem.classList.remove('withDescription');\n      elem.removeChild(description);\n    } else {      \n      const ticketDescriptionFunc = this.ticketView.ticketDescription.bind(this.ticketView);\n      this.ticketService.get(elem.id, ticketDescriptionFunc);\n      elem.classList.add('withDescription');\n    }\n  }\n\n  addTicket(e) {\n    e.preventDefault();\n    const addData = {};\n\n    Array.from(e.target.elements)\n    .filter((item) => !!item.name)\n    .forEach((element) => {\n      const { name, value } = element;\n      addData[name] = value;\n    });\n\n    const ticketDrawFunc = this.ticketView.ticketDraw.bind(this.ticketView);\n    this.ticketService.create(addData, ticketDrawFunc);\n    hideForm('add');\n  }\n\n  editTicket(e) {\n    e.preventDefault();\n    const id = this.targetTicket.id;\n    let data = {};\n\n    Array.from(e.target.elements)\n    .filter((item) => !!item.name)\n    .forEach((element) => {\n      const { name, value } = element;\n      data[name] = value;\n    });\n\n    const ticketUpdateFunc = this.ticketView.ticketUpdate.bind(this.ticketView);\n    this.ticketService.update(id, data, ticketUpdateFunc);\n    hideForm('edit');\n  }\n\n  deleteTicket(e) {\n    e.preventDefault();\n    const id = this.targetTicket.id;\n    const ticketDeleteFunc = this.ticketView.ticketDelete.bind(this.ticketView);\n    this.ticketService.delete(id, ticketDeleteFunc);\n    hideForm('delete');\n  }\n\n}\n"],"names":["__webpack_require__","renderElem","parent","type","className","elem","document","createElement","forEach","item","classList","add","appendChild","showForm","querySelector","hideForm","remove","showTicketData","ticket","editForm","value","name","description","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","TicketView","constructor","container","ticketDraw","date","ticketElem","id","ticketShort","doneBtn","doneBtnImg","status","done","textContent","ticketDate","Date","created","toLocaleString","year","month","day","hour","minute","editBtn","edit","deleteBtn","del","ticketDelete","getElementById","ticketUpdate","data","firstChild","ticketDescription","TicketForm","render","modal","form","formHeader","lableName","lableDescription","buttonsSection","cancelButton","addEventListener","event","preventDefault","okButton","async","url","options","request","fetch","result","ok","json","console","error","root","service","baseURL","list","callback","params","URLSearchParams","encodedURL","toString","requestOptions","method","headers","createRequest","get","create","body","JSON","stringify","update","delete","ticketService","HTMLElement","addTicket","bind","editTicket","deleteTicket","showDescription","targetTicket","init","ticketList","drawUI","ticketView","ticketDrawFunc","circleTarget","target","closest","contains","imgBtn","ticketUpdateFunc","desk","deskHeader","deskContent","addBtn","removeChild","ticketDescriptionFunc","addData","Array","from","elements","filter","element","ticketDeleteFunc"],"sourceRoot":""}